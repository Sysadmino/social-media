{"version":3,"sources":["Services/Service.js","Components/SiteBar/sitebar.module.scss","reportWebVitals.js","Redux/auth-reducer.ts","Components/Header/Header.js","Components/Header/HeaderContaner.js","Components/SiteBar/SiteBar.js","Redux/app-reducer.ts","Redux/selectors.ts","Utils/EnqueueSnackbar.ts","Utils/snackbar-saga.ts","LayoutUtils/Snackbar/Snackbar.tsx","api/api.ts","LayoutModals/LayoutModals.tsx","Layout/Layout.tsx","Redux/sidebar-reducer.ts","Redux/users-reducer.ts","Redux/Sagas/auth-saga.ts","Redux/Sagas/app-saga.ts","Redux/Sagas/profile-saga.ts","Redux/Sagas/users-saga.ts","Redux/Sagas/index.ts","Redux/redux-store.ts","Components/Users/User.tsx","Assets/Images/arrow.svg","Components/Common/Pagination/Pagination.tsx","Components/Users/Users.tsx","Components/Users/UsersContainer.tsx","Components/Login/Login.tsx","App.js","index.js","Redux/profile-reducer.ts","Components/Login/login.module.scss","Components/Common/Pagination/pagination.module.scss","Components/Common/FormsControls/FormsControls.js","Components/Common/FormsControls/forms-control.module.scss","Components/Header/header.module.scss","Assets/Images/oval.svg","Components/Common/Preloader/Preloader.js","Components/Users/users.module.scss","Layout/layout.module.scss","Assets/Images/user.png"],"names":["getClassName","args","className","map","x","join","trim","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","id","login","email","isAuth","errorMessage","captchaUrl","SET_USER_DATA","SET_CAPTCHA_URL","SET_ERROR","GET_LOGIN_DATA","LOGOUT_REQUEST","GET_CAPTCHA_URL","actions","getLoginData","password","rememberMe","captcha","type","logoutRequest","getCaptchaUrl","setAuthUserData","data","setCaptchaUrl","stopSubmit","authReducer","state","action","Header","props","styles","header","wrapper","onClick","logout","to","HeaderContainer","this","React","Component","connect","auth","SiteBar","sitebar","activeClassName","item","active","href","initialized","INITIALIZED_SUCCESS","INITIALIZE_APP","appReducer","getUsers","createSelector","usersPage","users","filter","u","getPageSize","pageSize","getTotalUsersCount","totalItemsCount","getCurrentPage","currentPage","getIsFetching","isFetching","getPortionSize","portionSize","getUsersFilterTerm","term","getUsersFilterFriend","friend","getInitialized","app","getVisible","error","visible","getMessage","object","message","variant","GET_SNACKBAR_POPUP","SET_VISIBLE","SET_MESSAGE","errorActions","messageObject","enqueueSnackbarReducer","enqueueSnackbarWatcher","showSnackbarPopup","hide","clear","takeEvery","window","put","newMessageObject","delay","call","ResultCodesEnum","ResultCodeForCaptchaEnum","Snackbar","useSelector","CSSTransition","in","timeout","classNames","unmountOnExit","onExited","style","color","memo","LayoutModals","Layout","children","dispatch","useDispatch","useEffect","main","content","Preloader","transparent","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_COUNT","SET_CURRENT_PAGE","SET_FILTER_PAGE","TOGGLE_IS_FETCHING","REQUESTED_USERS","FOLLOW_REQUEST","UNFOLLOW_REQUEST","pageNumber","userId","totalCount","payload","usersReducer","followed","instance","axios","create","withCredentials","baseURL","headers","usersAPI","get","response","post","delete","profileAPI","status","profile","photo","formData","FormData","append","authAPI","securityAPI","authWatcher","getAuthUserData","resultCode","Success","CaptchaIsRequired","url","appWatcher","initializeApp","promise","all","profileWatcher","getUserProfile","getUserProfileStatus","updateUserProfileStatus","updateUserProfilePhoto","saveProfile","GET_USER_PROFILE","GET_USER_PROFILE_STATUS","UPDATE_USER_PROFILE_STATUS","UPDATE_PHOTO_REQUEST","SAVE_PROFILE","setUserProfile","setUserProfileStatus","newStatus","file","updatePhotoSuccess","photos","select","userIdAction","userWatcher","requestedUsers","followRequest","unfollowRequest","items","rootWatcher","rootReducer","combineReducers","profilePage","profileReducer","sidebar","sagaMiddleware","createSagaMiddleware","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","run","User","user","follow","unfollow","alt","src","small","userPhoto","name","Pagination","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","arrow","onPageChanged","Users","followCallback","useCallback","unfollowCallback","inBlock","options","value","label","UsersSearchForm","useForm","mode","defaultValues","register","handleSubmit","control","setValue","getValue","find","option","onSubmit","onFilterChanged","placeholder","defaultValue","render","field","onChange","newValue","UsersContainer","history","useHistory","queryString","require","parsed","parse","location","search","slice","actualPage","actualFriend","page","Number","query","String","pathname","stringify","schema","yup","shape","required","min","max","connector","resolver","yupResolver","formState","errors","isValid","reset","stylesLogin","title","noValidate","formControlClassName","helperText","disabled","ProfileContainer","lazy","App","fallback","exact","path","ReactDOM","StrictMode","document","getElementById","posts","likesCount","profileStatus","SET_USER_PROFILE","SET_USER_PROFILE_STATUS","UPDATE_PHOTO_SUCCESS","updatePhotoRequest","profilePhoto","FormControl","Textarea","Input","disableSpinner","inButton","oval","spinnerIconClassName"],"mappings":"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","file":"static/js/main.b0429527.chunk.js","sourcesContent":["export default function getClassName(...args) {\r\n  const className = args\r\n    .map((x) => {\r\n      if (x) return ` ${x}`;\r\n      return ``;\r\n    })\r\n    .join(\"\")\r\n    .trim();\r\n\r\n  return className;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sitebar\":\"sitebar_sitebar__2izHV\",\"item\":\"sitebar_item__1o1iI\",\"active\":\"sitebar_active__mSPb_\",\"menu\":\"sitebar_menu__1iylt\"};","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { InferActionsTypes } from \"./redux-store\";\r\n\r\nlet initialState = {\r\n  id: null as number | null,\r\n  login: null as string | null,\r\n  email: null as string | null,\r\n  isAuth: false,\r\n  errorMessage: false,\r\n  captchaUrl: null as string | null,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nexport const SET_USER_DATA = \"social-network/auth/SET_USER_DATA\";\r\nexport const SET_CAPTCHA_URL = \"social-network/auth/SET_CAPTCHA_URL\";\r\nexport const SET_ERROR = \"social-network/auth/SET_ERROR\";\r\nexport const GET_LOGIN_DATA = \"social-network/auth/GET_LOGIN_DATA\";\r\nexport const LOGOUT_REQUEST = \"social-network/auth/LOGOUT_REQUEST\";\r\nexport const GET_CAPTCHA_URL = \"social-network/auth/GET_CAPTCHA_URL\";\r\n\r\nconst authReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n    }\r\n    case SET_CAPTCHA_URL: {\r\n      return {\r\n        ...state,\r\n        captchaUrl: action.captchaUrl,\r\n      };\r\n    }\r\n    case SET_ERROR: {\r\n      return {\r\n        ...state,\r\n        errorMessage: action.errorMessage,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  getLoginData: (\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: string | null\r\n  ) =>\r\n    ({\r\n      type: GET_LOGIN_DATA,\r\n      email,\r\n      password,\r\n      rememberMe,\r\n      captcha,\r\n    } as const),\r\n  logoutRequest: () =>\r\n    ({\r\n      type: LOGOUT_REQUEST,\r\n    } as const),\r\n  getCaptchaUrl: () =>\r\n    ({\r\n      type: GET_CAPTCHA_URL,\r\n    } as const),\r\n  setAuthUserData: (\r\n    id: number | null,\r\n    login: string | null,\r\n    email: string | null,\r\n    isAuth: boolean\r\n  ) =>\r\n    ({\r\n      type: SET_USER_DATA,\r\n      data: { id, login, email, isAuth },\r\n    } as const),\r\n  setCaptchaUrl: (captchaUrl: string | null) =>\r\n    ({\r\n      type: SET_CAPTCHA_URL,\r\n      captchaUrl,\r\n    } as const),\r\n  stopSubmit: (errorMessage: boolean) =>\r\n    ({\r\n      type: SET_ERROR,\r\n      errorMessage,\r\n    } as const),\r\n};\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./header.module.scss\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <div className={styles.wrapper}>\r\n        <div className={styles[\"header__title\"]}>Social Media App</div>\r\n        <div className={styles[\"login-block\"]}>\r\n          {props.isAuth ? (\r\n            <div className=\"flex _direction-column _align-items-center gap-5\">\r\n              <div>{props.login}</div>\r\n              <button\r\n                className={styles[\"header__logout-button\"]}\r\n                onClick={props.logout}\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <NavLink to={\"/login\"}>\r\n              <div className={styles[\"header__login-button\"]}>Login</div>\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actions } from \"../../Redux/auth-reducer\";\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    login: state.auth.login,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout: actions.logoutRequest })(\r\n  HeaderContainer\r\n);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./sitebar.module.scss\";\r\n\r\nconst SiteBar = () => {\r\n  return (\r\n    <nav className={styles.sitebar}>\r\n      <ul>\r\n        <li activeClassName={styles[\"active-item\"]}>\r\n          <NavLink\r\n            className={styles.item}\r\n            activeClassName={styles.active}\r\n            to=\"/profile\"\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </li>\r\n        <li activeClassName={styles[\"active-item\"]}>\r\n          <NavLink\r\n            className={styles.item}\r\n            activeClassName={styles.active}\r\n            to=\"/users\"\r\n          >\r\n            Users\r\n          </NavLink>\r\n        </li>\r\n        <li activeClassName={styles[\"active-item\"]}>\r\n          <a className={styles.item} href=\"http://localhost:3000/\">\r\n            News\r\n          </a>\r\n        </li>\r\n        <li activeClassName={styles[\"active-item\"]}>\r\n          <a className={styles.item} href=\"http://localhost:3000/\">\r\n            Music\r\n          </a>\r\n        </li>\r\n        <li activeClassName={styles[\"active-item\"]}>\r\n          <a className={styles.item} href=\"http://localhost:3000/\">\r\n            Settings\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SiteBar;\r\n","import { InferActionsTypes } from \"./redux-store\";\r\n\r\nexport type InitialStateType = {\r\n  initialized: boolean;\r\n};\r\n\r\nlet initialState: InitialStateType = {\r\n  initialized: false,\r\n};\r\n\r\nexport const INITIALIZED_SUCCESS = \"social-network/app/INITIALIZED_SUCCESS\";\r\nexport const INITIALIZE_APP = \"social-network/app/INITIALIZE_APP\";\r\n\r\nconst appReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n  initializeApp: () =>\r\n    ({\r\n      type: INITIALIZE_APP,\r\n    } as const),\r\n  initializedSuccess: () =>\r\n    ({\r\n      type: INITIALIZED_SUCCESS,\r\n    } as const),\r\n};\r\n\r\nexport default appReducer;\r\n","import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n  return users.filter((u) => true);\r\n});\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalItemsCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getPortionSize = (state: AppStateType) => {\r\n  return state.usersPage.portionSize;\r\n};\r\n\r\nexport const getUsersFilterTerm = (state: AppStateType) => {\r\n  return state.usersPage.filter.term;\r\n};\r\n\r\nexport const getUsersFilterFriend = (state: AppStateType) => {\r\n  return state.usersPage.filter.friend;\r\n};\r\n\r\nexport const getInitialized = (state: AppStateType) => {\r\n  return state.app.initialized;\r\n};\r\n\r\nexport const getVisible = (state: AppStateType) => {\r\n  return state.error.visible;\r\n};\r\n\r\nexport const getMessage = (state: AppStateType) => {\r\n  return state.error.object;\r\n};\r\n","import { InferActionsTypes } from \"../Redux/redux-store\";\r\nimport { IShowEnqueueSnackbarPopup } from \"./snackbar-saga\";\r\n\r\nexport type EnqueueSnackbarVariantType = \"SUCCESS\" | \"ERROR\" | undefined;\r\n\r\nexport interface IEnqueueSnackbarMessage {\r\n  message: string | undefined | null;\r\n  variant: EnqueueSnackbarVariantType;\r\n}\r\n\r\nexport type InitialStateType = {\r\n  visible: boolean;\r\n  object: IEnqueueSnackbarMessage;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  visible: false,\r\n  object: {\r\n    message: \"\",\r\n    variant: \"ERROR\",\r\n  },\r\n};\r\n\r\nexport const GET_SNACKBAR_POPUP = \"GET_SNACKBAR_POPUP\";\r\nexport const SET_VISIBLE = \"SET_VISIBLE\";\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\n\r\nconst enqueueSnackbarReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case SET_VISIBLE:\r\n      return {\r\n        ...state,\r\n        visible: action.visible,\r\n      };\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        object: {\r\n          ...state.object,\r\n          message: action.message,\r\n          variant: action.variant,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof errorActions>;\r\n\r\nexport const errorActions = {\r\n  getSnackbarPopup: (\r\n    message: string,\r\n    variant: EnqueueSnackbarVariantType = \"ERROR\"\r\n  ) =>\r\n    ({\r\n      type: GET_SNACKBAR_POPUP,\r\n      message,\r\n      variant,\r\n    } as const),\r\n  setVisible: (visible: boolean) => ({ type: SET_VISIBLE, visible } as const),\r\n  setMessage: (messageObject: IShowEnqueueSnackbarPopup | null) =>\r\n    ({\r\n      type: SET_MESSAGE,\r\n      message: messageObject?.message,\r\n      variant: messageObject?.variant,\r\n    } as const),\r\n};\r\n\r\nexport default enqueueSnackbarReducer;\r\n","import { call, put, takeEvery, delay } from \"redux-saga/effects\";\r\nimport {\r\n  errorActions,\r\n  EnqueueSnackbarVariantType,\r\n  GET_SNACKBAR_POPUP,\r\n} from \"./EnqueueSnackbar\";\r\n\r\nexport function* enqueueSnackbarWatcher() {\r\n  yield takeEvery<any>(GET_SNACKBAR_POPUP, showSnackbarPopup);\r\n}\r\n\r\nexport interface IShowEnqueueSnackbarPopup {\r\n  message: string | undefined;\r\n  variant: EnqueueSnackbarVariantType;\r\n}\r\n\r\nexport function* showSnackbarPopup(object: IShowEnqueueSnackbarPopup | null) {\r\n  if (typeof window === \"undefined\") return;\r\n  yield put(errorActions.setVisible(true));\r\n  const newMessageObject: IShowEnqueueSnackbarPopup | null = {\r\n    message: object?.message,\r\n    variant: object?.variant,\r\n  };\r\n  yield put(errorActions.setMessage(newMessageObject));\r\n  yield delay(3000);\r\n  yield call(hide);\r\n}\r\n\r\nexport function* hide() {\r\n  yield put(errorActions.setVisible(false));\r\n}\r\n\r\nexport function* clear() {\r\n  yield put(errorActions.setMessage(null));\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useSelector } from \"react-redux\";\r\nimport getClassName from \"../../Services/Service\";\r\nimport { getVisible, getMessage } from \"../../Redux/selectors\";\r\nimport { clear, hide } from \"../../Utils/snackbar-saga\";\r\n\r\nconst Snackbar: FunctionComponent = () => {\r\n  const visible = useSelector(getVisible);\r\n  const object = useSelector(getMessage);\r\n  const { message, variant } = object || {};\r\n  return (\r\n    <CSSTransition\r\n      in={visible}\r\n      timeout={300}\r\n      classNames=\"snackbar\"\r\n      unmountOnExit\r\n      onExited={clear}\r\n    >\r\n      <div className=\"snackbar-body-wrapper\">\r\n        <div\r\n          className={getClassName(\r\n            \"snackbar-body\",\r\n            variant === \"SUCCESS\" && \"_success\",\r\n            variant === \"ERROR\" && \"_error\"\r\n          )}\r\n        >\r\n          <button type=\"button\" onClick={hide} className=\"snackbar-button\">\r\n            <div style={{ color: \"white\" }}>{message}</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default React.memo(Snackbar);\r\n","import { PhotoType, ProfileType, UserType } from \"./../types/types\";\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"a1c49f5e-263d-438c-8493-378ba78c02f4\",\r\n  },\r\n});\r\n\r\nexport enum ResultCodesEnum {\r\n  Success = 0,\r\n  Error = 1,\r\n}\r\n\r\nexport enum ResultCodeForCaptchaEnum {\r\n  CaptchaIsRequired = 10,\r\n}\r\n\r\ntype ResponseType<T = {}, RC = ResultCodesEnum> = {\r\n  data: T;\r\n  resultCode: RC;\r\n  messages: Array<string>;\r\n};\r\n\r\nexport type GetItemsType = {\r\n  items: Array<UserType>;\r\n  totalCount: number;\r\n  error: string | null;\r\n};\r\n\r\nexport const usersAPI = {\r\n  getUsers(\r\n    currentPage: number,\r\n    pageSize: number,\r\n    term: string = \"\",\r\n    friend: boolean | null = null\r\n  ) {\r\n    return instance\r\n      .get<GetItemsType>(\r\n        `users?page=${currentPage}&count=${pageSize}&term=${term}` +\r\n          (friend === null ? \"\" : `&friend=${friend}`)\r\n      )\r\n      .then((response) => response.data);\r\n  },\r\n  follow(userId: number) {\r\n    return instance.post<ResponseType>(`follow/${userId}`);\r\n  },\r\n  unfollow(userId: number) {\r\n    return instance.delete<ResponseType>(`follow/${userId}`);\r\n  },\r\n};\r\n\r\ntype UpdatePhotoResponseDataType = {\r\n  photos: PhotoType;\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: number) {\r\n    return instance.get<ProfileType>(`profile/${userId}`);\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance.get<string>(`profile/status/${userId}`);\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance.put<ResponseType>(`profile/status`, { status: status });\r\n  },\r\n  saveProfile(profile: ProfileType) {\r\n    return instance.put<ResponseType>(`profile`, profile);\r\n  },\r\n  updatePhoto(photo: any) {\r\n    const formData = new FormData();\r\n    formData.append(\"image\", photo);\r\n    return instance.put<ResponseType<UpdatePhotoResponseDataType>>(\r\n      `profile/photo`,\r\n      formData,\r\n      {\r\n        headers: {\r\n          \"content-type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n    );\r\n  },\r\n};\r\n\r\ntype MeResponseType = {\r\n  id: number;\r\n  email: string;\r\n  login: string;\r\n};\r\n\r\ntype LoginResponseType = {\r\n  userId: number;\r\n};\r\n\r\ntype LoginResultCodeResponseType = ResultCodesEnum | ResultCodeForCaptchaEnum;\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get<ResponseType<MeResponseType>>(`auth/me`);\r\n  },\r\n  login(\r\n    email: string,\r\n    password: string,\r\n    rememberMe: boolean,\r\n    captcha: string | null\r\n  ) {\r\n    return instance.post<\r\n      ResponseType<LoginResponseType, LoginResultCodeResponseType>\r\n    >(`auth/login`, {\r\n      email: email,\r\n      password: password,\r\n      rememberMe: rememberMe,\r\n      captcha: captcha,\r\n    });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n\r\ntype GetCaptchaUrlResponseType = { url: string };\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance.get<GetCaptchaUrlResponseType>(\"security/get-captcha-url\");\r\n  },\r\n};\r\n","import React, { FC } from \"react\";\r\nimport Snackbar from \"../LayoutUtils/Snackbar/Snackbar\";\r\n\r\nconst LayoutModals: FC = () => {\r\n  return (\r\n    <>\r\n      <Snackbar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutModals;\r\n","import React, { FC, useEffect } from \"react\";\r\nimport HeaderContainer from \"../Components/Header/HeaderContaner\";\r\nimport SiteBar from \"../Components/SiteBar/SiteBar\";\r\nimport styles from \"./layout.module.scss\";\r\nimport \"../app.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Preloader from \"../Components/Common/Preloader/Preloader\";\r\nimport { actions } from \"../Redux/app-reducer\";\r\nimport { getInitialized } from \"../Redux/selectors\";\r\nimport LayoutModals from \"../LayoutModals/LayoutModals\";\r\n\r\ninterface ILayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Layout: FC<ILayoutProps> = ({ children }) => {\r\n  const initialized = useSelector(getInitialized);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(actions.initializeApp());\r\n  }, [dispatch]);\r\n\r\n  if (!initialized) {\r\n    return <Preloader transparent />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HeaderContainer />\r\n      <main className={styles.main}>\r\n        <SiteBar />\r\n        <div className={styles.content}>{children}</div>\r\n      </main>\r\n      <LayoutModals />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","let initialState: Object = {};\r\n\r\nconst sidebarReducer = (state = initialState, action: any): Object => {\r\n  return state;\r\n};\r\n\r\nexport default sidebarReducer;\r\n","import { UserType } from \"./../types/types\";\r\nimport { InferActionsTypes } from \"./redux-store\";\r\n\r\nexport type InitialStateType = {\r\n  users: Array<UserType>;\r\n  pageSize: number;\r\n  totalItemsCount: number;\r\n  currentPage: number;\r\n  portionSize: number;\r\n  isFetching: boolean;\r\n  filter: {\r\n    term: string;\r\n    friend: boolean | null;\r\n  };\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalItemsCount: 0,\r\n  currentPage: 1,\r\n  portionSize: 5,\r\n  isFetching: false,\r\n  filter: {\r\n    term: \"\",\r\n    friend: null,\r\n  },\r\n};\r\n\r\nexport const FOLLOW = \"FOLLOW\";\r\nexport const UNFOLLOW = \"UNFOLLOW\";\r\nexport const SET_USERS = \"SET_USERS\";\r\nexport const SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const SET_FILTER_PAGE = \"SET_FILTER_PAGE\";\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nexport const REQUESTED_USERS = \"REQUESTED_USERS\";\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\n\r\nconst usersReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): InitialStateType => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((x) => {\r\n          if (x.id === action.userId) return { ...x, followed: true };\r\n          return x;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((x) => {\r\n          if (x.id === action.userId) return { ...x, followed: false };\r\n          return x;\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_TOTAL_COUNT:\r\n      return {\r\n        ...state,\r\n        totalItemsCount: action.totalCount,\r\n      } as any;\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_FILTER_PAGE:\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n  requestUsers: (\r\n    pageNumber: number,\r\n    pageSize: number,\r\n    term: string,\r\n    friend: boolean | null\r\n  ) =>\r\n    ({\r\n      type: REQUESTED_USERS,\r\n      pageNumber,\r\n      pageSize,\r\n      term,\r\n      friend,\r\n    } as const),\r\n  followRequest: (userId: number) =>\r\n    ({\r\n      type: FOLLOW_REQUEST,\r\n      userId,\r\n    } as const),\r\n  unfollowRequest: (userId: number) =>\r\n    ({\r\n      type: UNFOLLOW_REQUEST,\r\n      userId,\r\n    } as const),\r\n  followSuccess: (userId: number) =>\r\n    ({\r\n      type: FOLLOW,\r\n      userId,\r\n    } as const),\r\n  unfollowSuccess: (userId: number) =>\r\n    ({\r\n      type: UNFOLLOW,\r\n      userId,\r\n    } as const),\r\n  setUsers: (users: Array<UserType>) =>\r\n    ({\r\n      type: SET_USERS,\r\n      users,\r\n    } as const),\r\n  setTotalCount: (totalCount: number) =>\r\n    ({\r\n      type: SET_TOTAL_COUNT,\r\n      totalCount,\r\n    } as const),\r\n  setCurrentPage: (currentPage: number) =>\r\n    ({\r\n      type: SET_CURRENT_PAGE,\r\n      currentPage,\r\n    } as const),\r\n  setFilter: (term: string, friend: boolean | null) =>\r\n    ({\r\n      type: SET_FILTER_PAGE,\r\n      payload: { term, friend },\r\n    } as const),\r\n  toggleIsFetching: (isFetching: boolean) =>\r\n    ({\r\n      type: TOGGLE_IS_FETCHING,\r\n      isFetching,\r\n    } as const),\r\n};\r\n\r\nexport default usersReducer;\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  authAPI,\r\n  ResultCodeForCaptchaEnum,\r\n  ResultCodesEnum,\r\n  securityAPI,\r\n} from \"../../api/api\";\r\nimport {\r\n  actions,\r\n  GET_CAPTCHA_URL,\r\n  GET_LOGIN_DATA,\r\n  LOGOUT_REQUEST,\r\n} from \"../auth-reducer\";\r\n\r\nexport function* authWatcher() {\r\n  yield takeEvery<any>(GET_LOGIN_DATA, login);\r\n  yield takeEvery(LOGOUT_REQUEST, logout);\r\n  yield takeEvery(GET_CAPTCHA_URL, getCaptchaUrl);\r\n}\r\n\r\nexport function* getAuthUserData() {\r\n  let response = yield call(authAPI.me);\r\n\r\n  if (response.data.resultCode === ResultCodesEnum.Success) {\r\n    const { id, login, email } = yield response.data.data;\r\n    yield put(actions.setAuthUserData(id, login, email, true));\r\n  }\r\n}\r\n\r\ninterface ILogin {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n  captcha: string | null;\r\n}\r\n\r\nexport function* login(action: ILogin) {\r\n  let response = yield call(\r\n    authAPI.login,\r\n    action.email,\r\n    action.password,\r\n    action.rememberMe,\r\n    action.captcha\r\n  );\r\n  if (response.data.resultCode === ResultCodesEnum.Success) {\r\n    yield call(getAuthUserData);\r\n  } else {\r\n    if (\r\n      response.data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired\r\n    ) {\r\n      yield call(getCaptchaUrl);\r\n    }\r\n    yield put(actions.stopSubmit(true));\r\n  }\r\n}\r\n\r\nexport function* logout() {\r\n  const response = yield call(authAPI.logout);\r\n  if (response.data.resultCode === 0) {\r\n    yield put(actions.setAuthUserData(null, null, null, false));\r\n    yield put(actions.setCaptchaUrl(null));\r\n    yield put(actions.stopSubmit(false));\r\n  }\r\n}\r\n\r\nexport function* getCaptchaUrl() {\r\n  const response = yield call(securityAPI.getCaptchaUrl);\r\n  const captchaUrl = yield response.data.url;\r\n  yield put(actions.setCaptchaUrl(captchaUrl));\r\n}\r\n","import { all, call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { actions, INITIALIZE_APP } from \"../app-reducer\";\r\nimport { getAuthUserData } from \"./auth-saga\";\r\n\r\nexport function* appWatcher() {\r\n  yield takeEvery(INITIALIZE_APP, initializeApp);\r\n}\r\n\r\nexport function* initializeApp() {\r\n  const promise = yield call(getAuthUserData);\r\n  yield all([promise]);\r\n  yield put(actions.initializedSuccess());\r\n}\r\n","import { ProfileType } from \"./../../types/types\";\r\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\r\nimport { profileAPI, ResultCodesEnum } from \"../../api/api\";\r\nimport { errorActions } from \"../../Utils/EnqueueSnackbar\";\r\nimport {\r\n  actions,\r\n  GET_USER_PROFILE,\r\n  GET_USER_PROFILE_STATUS,\r\n  SAVE_PROFILE,\r\n  UPDATE_PHOTO_REQUEST,\r\n  UPDATE_USER_PROFILE_STATUS,\r\n} from \"../profile-reducer\";\r\nimport { AppStateType } from \"../redux-store\";\r\n\r\nexport function* profileWatcher() {\r\n  yield takeEvery<any>(GET_USER_PROFILE, getUserProfile);\r\n  yield takeEvery<any>(GET_USER_PROFILE_STATUS, getUserProfileStatus);\r\n  yield takeEvery<any>(UPDATE_USER_PROFILE_STATUS, updateUserProfileStatus);\r\n  yield takeEvery<any>(UPDATE_PHOTO_REQUEST, updateUserProfilePhoto);\r\n  yield takeEvery<any>(SAVE_PROFILE, saveProfile);\r\n}\r\n\r\ninterface IGetUserProfile {\r\n  userId: number;\r\n}\r\n\r\nexport function* getUserProfile(action: IGetUserProfile) {\r\n  try {\r\n    let response = yield call(profileAPI.getProfile, action.userId);\r\n    yield put(actions.setUserProfile(response.data));\r\n  } catch {\r\n    yield put(\r\n      errorActions.getSnackbarPopup(\"Не удалось получить профиль пользователя\")\r\n    );\r\n  }\r\n}\r\n\r\ninterface IGetUserProfileStatus {\r\n  userId: number;\r\n}\r\n\r\nexport function* getUserProfileStatus(action: IGetUserProfileStatus) {\r\n  try {\r\n    let response = yield call(profileAPI.getStatus, action.userId);\r\n    yield put(actions.setUserProfileStatus(response.data));\r\n  } catch {\r\n    yield put(\r\n      errorActions.getSnackbarPopup(\"Не удалось получить статус пользователя\")\r\n    );\r\n  }\r\n}\r\n\r\ninterface IUpdateUserProfileStatus {\r\n  newStatus: string;\r\n}\r\n\r\nexport function* updateUserProfileStatus(action: IUpdateUserProfileStatus) {\r\n  let response = yield call(profileAPI.updateStatus, action.newStatus);\r\n  if (response.data.resultCode === ResultCodesEnum.Success) {\r\n    yield put(actions.setUserProfileStatus(action.newStatus));\r\n  } else {\r\n    yield put(\r\n      errorActions.getSnackbarPopup(\"Не удалось обновить статус профиля\")\r\n    );\r\n  }\r\n}\r\n\r\ninterface IUpdateUserProfilePhoto {\r\n  file: File;\r\n}\r\n\r\nexport function* updateUserProfilePhoto(action: IUpdateUserProfilePhoto) {\r\n  let response = yield call(profileAPI.updatePhoto, action.file);\r\n  if (response.data.resultCode === ResultCodesEnum.Success) {\r\n    yield put(actions.updatePhotoSuccess(response.data.data.photos));\r\n  } else {\r\n    yield put(\r\n      errorActions.getSnackbarPopup(\"Не удалось обновить фото профиля\")\r\n    );\r\n  }\r\n}\r\n\r\ninterface ISaveProfile {\r\n  profile: ProfileType;\r\n}\r\n\r\nexport function* saveProfile(action: ISaveProfile) {\r\n  const userId = yield select((state: AppStateType) => state.auth.id);\r\n  let response = yield call(profileAPI.saveProfile, action.profile);\r\n  if (response.data.resultCode === ResultCodesEnum.Success) {\r\n    if (userId !== null) {\r\n      const userIdAction: IGetUserProfile = { userId };\r\n      yield call(getUserProfile, userIdAction);\r\n    } else {\r\n      yield put(errorActions.getSnackbarPopup(\"userId can't be null\"));\r\n    }\r\n  } else {\r\n    yield put(errorActions.getSnackbarPopup(\"Не удалось сохранить профиль\"));\r\n  }\r\n}\r\n","import { errorActions } from \"../../Utils/EnqueueSnackbar\";\r\nimport { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport { usersAPI } from \"../../api/api\";\r\nimport {\r\n  actions,\r\n  FOLLOW_REQUEST,\r\n  REQUESTED_USERS,\r\n  UNFOLLOW_REQUEST,\r\n} from \"../users-reducer\";\r\n\r\nexport function* userWatcher() {\r\n  yield takeEvery<any>(REQUESTED_USERS, requestedUsers);\r\n  yield takeEvery<any>(FOLLOW_REQUEST, followRequest);\r\n  yield takeEvery<any>(UNFOLLOW_REQUEST, unfollowRequest);\r\n}\r\n\r\ninterface IRequestedUsers {\r\n  pageNumber: number;\r\n  pageSize: number;\r\n  term: string;\r\n  friend: boolean | null;\r\n}\r\n\r\nexport function* requestedUsers(action: IRequestedUsers) {\r\n  try {\r\n    yield put(actions.toggleIsFetching(true));\r\n    yield put(actions.setCurrentPage(action.pageNumber));\r\n    yield put(actions.setFilter(action.term, action.friend));\r\n    let data = yield call(\r\n      usersAPI.getUsers,\r\n      action.pageNumber,\r\n      action.pageSize,\r\n      action.term,\r\n      action.friend\r\n    );\r\n    yield put(actions.setUsers(data.items));\r\n    yield put(actions.setTotalCount(data.totalCount));\r\n    yield put(actions.toggleIsFetching(false));\r\n  } catch {\r\n    yield put(\r\n      errorActions.getSnackbarPopup(\"Не удалось загрузить пользователей\")\r\n    );\r\n  }\r\n}\r\n\r\ninterface IFollowRequest {\r\n  userId: number;\r\n}\r\n\r\nexport function* followRequest(action: IFollowRequest) {\r\n  try {\r\n    yield call(usersAPI.follow, action.userId);\r\n    yield put(actions.followSuccess(action.userId));\r\n  } catch {\r\n    yield put(\r\n      errorActions.getSnackbarPopup(\r\n        \"Не удалось совершить действие. Попробуйте позже.\"\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\ninterface IUnfollowRequest {\r\n  userId: number;\r\n}\r\n\r\nexport function* unfollowRequest(action: IUnfollowRequest) {\r\n  try {\r\n    yield call(usersAPI.unfollow, action.userId);\r\n    yield put(actions.unfollowSuccess(action.userId));\r\n  } catch {\r\n    yield put(\r\n      errorActions.getSnackbarPopup(\r\n        \"Не удалось совершить действие. Попробуйте позже.\"\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { appWatcher } from \"./app-saga\";\r\nimport { authWatcher } from \"./auth-saga\";\r\nimport { profileWatcher } from \"./profile-saga\";\r\nimport { userWatcher } from \"./users-saga\";\r\nimport { enqueueSnackbarWatcher } from \"../../Utils/snackbar-saga\";\r\n\r\nexport function* rootWatcher() {\r\n  yield all([\r\n    userWatcher(),\r\n    profileWatcher(),\r\n    authWatcher(),\r\n    appWatcher(),\r\n    enqueueSnackbarWatcher(),\r\n  ]);\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n// import thunkMiddleware, { ThunkAction } from \"redux-thunk\";\r\n// import { reducer as formReducer } from \"redux-form\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport appReducer from \"./app-reducer\";\r\nimport { rootWatcher } from \"./Sagas\";\r\nimport enqueueSnackbarReducer from \"../Utils/EnqueueSnackbar\";\r\n\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  error: enqueueSnackbarReducer,\r\n});\r\n\r\ntype rootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<rootReducerType>;\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never;\r\n\r\nexport type InferActionsTypes<\r\n  T extends { [key: string]: (...args: Array<any>) => any }\r\n> = ReturnType<PropertiesTypes<T>>;\r\n\r\n// create the saga middleware\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst composeEnhancers =\r\n  typeof (window as any) === \"object\" &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\n// export type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\r\n//   R,\r\n//   AppStateType,\r\n//   unknown,\r\n//   A\r\n// >;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(sagaMiddleware)\r\n  // other store enhancers if any\r\n);\r\n\r\nlet store = createStore(rootReducer, /* preloadedState, */ enhancer);\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\nsagaMiddleware.run(rootWatcher);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport styles from \"./users.module.scss\";\r\nimport userPhoto from \"../../Assets/Images/user.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserType } from \"../../types/types\";\r\n\r\ninterface IUserProps {\r\n  user: UserType;\r\n  follow: (userId: number) => void;\r\n  unfollow: (userId: number) => void;\r\n}\r\n\r\nconst User: React.FC<IUserProps> = (props) => {\r\n  const { user, follow, unfollow } = props;\r\n  return (\r\n    <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={`/profile/${user.id}`}>\r\n            <img\r\n              alt=\"\"\r\n              src={user.photos.small != null ? user.photos.small : userPhoto}\r\n              className={styles.userPhoto}\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          {user.followed ? (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                unfollow(user.id);\r\n              }}\r\n            >\r\n              Unfollow\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                follow(user.id);\r\n              }}\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n        </div>\r\n      </span>\r\n      <span>\r\n        <span>\r\n          <div>{user.name}</div>\r\n          <div>{user.status}</div>\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(User);\r\n","export default __webpack_public_path__ + \"static/media/arrow.27eb300a.svg\";","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getCurrentPage,\r\n  getPageSize,\r\n  getPortionSize,\r\n  getTotalUsersCount,\r\n} from \"../../../Redux/selectors\";\r\nimport getClassName from \"../../../Services/Service\";\r\nimport arrow from \"../../../Assets/Images/arrow.svg\";\r\nimport styles from \"./pagination.module.scss\";\r\n\r\ntype PropsType = {\r\n  onPageChanged: (pageNumber: number) => void;\r\n};\r\n\r\nconst Pagination: React.FC<PropsType> = (props) => {\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const pageSize = useSelector(getPageSize);\r\n  const totalItemsCount = useSelector(getTotalUsersCount);\r\n  const portionSize = useSelector(getPortionSize);\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n  let pages: Array<number> = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div\r\n      className={getClassName(\r\n        \"flex _align-items-center\",\r\n        styles[\"bottom-space\"]\r\n      )}\r\n    >\r\n      {portionNumber > 1 && (\r\n        <button\r\n          className={styles[\"previous-botton\"]}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n          }}\r\n        >\r\n          <img src={arrow} className={styles[\"image\"]} alt=\"\" />\r\n        </button>\r\n      )}\r\n      {pages\r\n        .filter(\r\n          (x) => x >= leftPortionPageNumber && x <= rightPortionPageNumber\r\n        )\r\n        .map((x) => {\r\n          return (\r\n            <span\r\n              onClick={() => props.onPageChanged(x)}\r\n              className={getClassName(\r\n                styles[\"page-number\"],\r\n                currentPage === x && styles[\"selected-page\"]\r\n              )}\r\n            >\r\n              {x}\r\n            </span>\r\n          );\r\n        })}\r\n      {portionCount > portionNumber && (\r\n        <button\r\n          className={styles[\"next-botton\"]}\r\n          onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n          }}\r\n        >\r\n          <img src={arrow} className={styles[\"image\"]} alt=\"\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useCallback } from \"react\";\r\nimport User from \"./User\";\r\nimport Pagination from \"../Common/Pagination/Pagination\";\r\nimport { Input } from \"../Common/FormsControls/FormsControls\";\r\nimport { useForm, SubmitHandler, Controller } from \"react-hook-form\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUsers,\r\n  getUsersFilterFriend,\r\n  getUsersFilterTerm,\r\n  getIsFetching,\r\n} from \"../../Redux/selectors\";\r\n// import { followRequest, unfollowRequest } from \"../../Redux/Sagas/users-saga\";\r\nimport { actions } from \"../../Redux/users-reducer\";\r\n\r\nimport styles from \"./users.module.scss\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\ntype PropsType = {\r\n  onPageChanged: (pageNumber: number) => void;\r\n  onFilterChanged: (term: string, friend: boolean | null) => void;\r\n};\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n  const { onPageChanged } = props;\r\n\r\n  const users = useSelector(getUsers);\r\n  const isFetching = useSelector(getIsFetching);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const followCallback = useCallback((userId: number) => {\r\n    dispatch(actions.followRequest(userId));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const unfollowCallback = useCallback((userId: number) => {\r\n    dispatch(actions.unfollowRequest(userId));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <UsersSearchForm {...props} />\r\n      {isFetching ? <Preloader inBlock transparent /> : null}\r\n      <Pagination onPageChanged={onPageChanged} />\r\n      <div className={styles[\"users-container\"]}>\r\n        {users.map((x) => (\r\n          <User\r\n            key={x.id}\r\n            follow={followCallback}\r\n            unfollow={unfollowCallback}\r\n            user={x}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface FormValues {\r\n  term: string;\r\n  friend: boolean | null;\r\n}\r\n\r\ninterface IOptions {\r\n  value: boolean | null;\r\n  label: string;\r\n}\r\n\r\nconst options: IOptions[] = [\r\n  { value: null, label: \"All\" },\r\n  { value: true, label: \"Only followed\" },\r\n  { value: false, label: \"Only unfollowed\" },\r\n];\r\n\r\nconst UsersSearchForm: React.FC<PropsType> = (props) => {\r\n  const term = useSelector(getUsersFilterTerm);\r\n  const friend = useSelector(getUsersFilterFriend);\r\n\r\n  const { register, handleSubmit, control, setValue } = useForm<FormValues>({\r\n    mode: \"onChange\",\r\n    defaultValues: { term, friend },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    setValue(\"term\", term);\r\n    setValue(\"friend\", friend);\r\n  }, [term, friend, setValue]);\r\n\r\n  const onSubmit: SubmitHandler<FormValues> = (value) => {\r\n    props.onFilterChanged(value.term, value.friend);\r\n  };\r\n\r\n  const getValue = (value: boolean | null) =>\r\n    options.find((option) => option.value === value);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search user\"\r\n        name={{ ...register(\"term\") }}\r\n        className={styles[\"search-user\"]}\r\n      />\r\n      <Controller\r\n        control={control}\r\n        defaultValue={friend}\r\n        name=\"friend\"\r\n        render={({ field: { onChange, value } }) => (\r\n          <Select\r\n            options={options}\r\n            value={getValue(value)}\r\n            onChange={(newValue) => onChange((newValue as IOptions).value)}\r\n          />\r\n        )}\r\n      />\r\n      <button className={styles[\"search-button\"]}>Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default React.memo(Users);\r\n","import React, { FunctionComponent, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n  getCurrentPage,\r\n  getPageSize,\r\n  getUsersFilterFriend,\r\n  getUsersFilterTerm,\r\n} from \"../../Redux/selectors\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { actions } from \"../../Redux/users-reducer\";\r\n\r\nconst UsersContainer: FunctionComponent = () => {\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const pageSize = useSelector(getPageSize);\r\n  const term = useSelector(getUsersFilterTerm);\r\n  const friend = useSelector(getUsersFilterFriend);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const queryString = require(\"querystring\");\r\n\r\n  useEffect(() => {\r\n    const parsed = queryString.parse(history.location.search.slice(1));\r\n\r\n    let actualPage = currentPage;\r\n    let actualFriend = friend;\r\n    if (!!parsed.page) actualPage = Number(parsed.page);\r\n\r\n    switch (parsed.friend) {\r\n      case \"true\":\r\n        actualFriend = true;\r\n        break;\r\n      case \"false\":\r\n        actualFriend = false;\r\n        break;\r\n      case \"null\":\r\n        actualFriend = null;\r\n        break;\r\n    }\r\n\r\n    dispatch(\r\n      actions.requestUsers(actualPage, pageSize, parsed.term, actualFriend)\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const query: {\r\n      term?: string;\r\n      friend?: string;\r\n      page?: string;\r\n    } = {};\r\n\r\n    if (!!term) query.term = term;\r\n    if (friend !== null) query.friend = String(friend);\r\n    if (currentPage !== 1) query.page = String(currentPage);\r\n\r\n    history.push({\r\n      pathname: \"/users\",\r\n      search: queryString.stringify(query),\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [term, friend, currentPage]);\r\n\r\n  const onPageChanged = (pageNumber: number): void => {\r\n    dispatch(actions.requestUsers(pageNumber, pageSize, term, friend));\r\n  };\r\n\r\n  const onFilterChanged = (term: string, friend: boolean | null): void => {\r\n    dispatch(actions.requestUsers(1, pageSize, term, friend));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Users onPageChanged={onPageChanged} onFilterChanged={onFilterChanged} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersContainer;\r\n","import React, { FC } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Input } from \"../Common/FormsControls/FormsControls\";\r\nimport styles from \"../Common/FormsControls/forms-control.module.scss\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { AppStateType } from \"../../Redux/redux-store\";\r\nimport { actions } from \"../../Redux/auth-reducer\";\r\nimport stylesLogin from \"./login.module.scss\";\r\nimport getClassName from \"../../Services/Service\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"Неверный формат e-mail адреса\")\r\n    .required(\"Заполните поле\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Заполните поле\")\r\n    .min(4, \"Пароль должен содержать как минимум 4 символа\")\r\n    .max(10, \"Пароль может содержать максимум 10 символов\"),\r\n});\r\n\r\ninterface FormValues {\r\n  email: string;\r\n  password: string;\r\n  rememberMe: boolean;\r\n  captcha: string | null;\r\n}\r\n\r\nconst Login: FC<Props> = (props) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isValid },\r\n    reset,\r\n  } = useForm<FormValues>({\r\n    mode: \"onChange\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const onSubmit: SubmitHandler<FormValues> = (data) => {\r\n    props.login(data.email, data.password, data.rememberMe, data.captcha);\r\n    reset();\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={getClassName(\r\n        \"flex _direction-column _align-items-center\",\r\n        stylesLogin[\"login-wrapper\"]\r\n      )}\r\n    >\r\n      {props.errorMessage && (\r\n        <div className={styles[\"form-common-error\"]}>\r\n          Неверный Email или Пароль\r\n        </div>\r\n      )}\r\n      <h1 className={stylesLogin.title}>Login</h1>\r\n      <form\r\n        className={stylesLogin[\"login-form\"]}\r\n        noValidate\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <div>\r\n          <Input\r\n            className={stylesLogin.field}\r\n            formControlClassName={stylesLogin[\"form-control-field\"]}\r\n            type=\"email\"\r\n            placeholder=\"Login\"\r\n            name={{ ...register(\"email\") }}\r\n            error={!!errors?.email}\r\n            helperText={errors?.email?.message}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            className={stylesLogin.field}\r\n            formControlClassName={stylesLogin[\"form-control-field\"]}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name={{ ...register(\"password\") }}\r\n            error={!!errors?.password}\r\n            helperText={errors?.password?.message}\r\n          />\r\n        </div>\r\n        <div className={stylesLogin[\"remember-block\"]}>\r\n          <Input\r\n            className={stylesLogin[\"remember-checkbox\"]}\r\n            type=\"checkbox\"\r\n            name={{ ...register(\"rememberMe\") }}\r\n          />\r\n          <span className={stylesLogin[\"remember-text\"]}>Запомнить меня</span>\r\n        </div>\r\n        {props.captchaUrl && (\r\n          <>\r\n            <img alt=\"\" src={props.captchaUrl} />\r\n            <div>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Write captcha\"\r\n                name={{ ...register(\"captcha\") }}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        <button\r\n          className={getClassName(\r\n            stylesLogin[\"login-button\"],\r\n            !isValid && styles[\"_disable\"]\r\n          )}\r\n          type=\"submit\"\r\n          disabled={!isValid}\r\n        >\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n  errorMessage: state.auth.errorMessage,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { login: actions.getLoginData });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux; // type Props = PropsFromRedux & {other props not from redux}\r\n\r\nexport default connector(Login);\r\n","import React, { Suspense } from \"react\";\nimport Layout from \"./Layout/Layout\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/redux-store\";\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport Login from \"./Components/Login/Login\";\nconst ProfileContainer = React.lazy(() =>\n  import(\"./Components/Profile/ProfileContainer\")\n);\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <Layout>\n          <Suspense fallback={<Preloader inBlock transparent />}>\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/profile\" />} />\n              <Route\n                path=\"/profile/:userId?\"\n                render={() => <ProfileContainer />}\n              />\n              <Route path=\"/users\" render={() => <UsersContainer />} />\n              <Route path=\"/login\" render={() => <Login />} />\n              <Route render={() => <div>404 NOT FOUND</div>} />\n            </Switch>\n          </Suspense>\n        </Layout>\n      </Provider>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { InferActionsTypes } from \"./redux-store\";\r\nimport { PostType, ProfileType, PhotoType } from \"./../types/types\";\r\n\r\nexport type initialStateType = {\r\n  posts: Array<PostType>;\r\n  profile: ProfileType | null;\r\n  profileStatus: string;\r\n};\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\nlet initialState: initialStateType = {\r\n  posts: [\r\n    { id: 1, message: \"New post\", likesCount: 12 },\r\n    { id: 2, message: \"it is my first post\", likesCount: 11 },\r\n  ],\r\n  profile: null,\r\n  profileStatus: \"\",\r\n};\r\n\r\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nexport const SET_USER_PROFILE_STATUS = \"SET_USER_PROFILE_STATUS\";\r\nexport const UPDATE_PHOTO_SUCCESS = \"UPDATE_PHOTO_SUCCESS\";\r\nexport const SAVE_PROFILE = \"SAVE_PROFILE\";\r\nexport const GET_USER_PROFILE_STATUS = \"GET_USER_PROFILE_STATUS\";\r\nexport const UPDATE_USER_PROFILE_STATUS = \"UPDATE_USER_PROFILE_STATUS\";\r\nexport const UPDATE_PHOTO_REQUEST = \"UPDATE_PHOTO_REQUEST\";\r\nexport const GET_USER_PROFILE = \"GET_USER_PROFILE\";\r\n\r\nconst profileReducer = (\r\n  state = initialState,\r\n  action: ActionsTypes\r\n): initialStateType => {\r\n  switch (action.type) {\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n    case SET_USER_PROFILE_STATUS: {\r\n      return { ...state, profileStatus: action.profileStatus };\r\n    }\r\n    case UPDATE_PHOTO_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          photos: action.profilePhoto,\r\n        } as ProfileType,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const actions = {\r\n  getUserProfile: (userId: number) =>\r\n    ({\r\n      type: GET_USER_PROFILE,\r\n      userId,\r\n    } as const),\r\n  updatePhotoRequest: (file: File) =>\r\n    ({\r\n      type: UPDATE_PHOTO_REQUEST,\r\n      file,\r\n    } as const),\r\n  updateUserProfileStatus: (newStatus: string) =>\r\n    ({\r\n      type: UPDATE_USER_PROFILE_STATUS,\r\n      newStatus,\r\n    } as const),\r\n  getUserProfileStatus: (userId: number) =>\r\n    ({\r\n      type: GET_USER_PROFILE_STATUS,\r\n      userId,\r\n    } as const),\r\n  saveProfile: (profile: ProfileType) =>\r\n    ({\r\n      type: SAVE_PROFILE,\r\n      profile,\r\n    } as const),\r\n  setUserProfile: (profile: ProfileType) =>\r\n    ({\r\n      type: SET_USER_PROFILE,\r\n      profile,\r\n    } as const),\r\n  setUserProfileStatus: (profileStatus: string) =>\r\n    ({\r\n      type: SET_USER_PROFILE_STATUS,\r\n      profileStatus,\r\n    } as const),\r\n  updatePhotoSuccess: (profilePhoto: PhotoType) =>\r\n    ({\r\n      type: UPDATE_PHOTO_SUCCESS,\r\n      profilePhoto,\r\n    } as const),\r\n};\r\n\r\nexport default profileReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-wrapper\":\"login_login-wrapper__11TAs\",\"login-form\":\"login_login-form__2WiNX\",\"title\":\"login_title__EeJE8\",\"field\":\"login_field__13fZX\",\"form-control-field\":\"login_form-control-field__2QzPV\",\"remember-checkbox\":\"login_remember-checkbox__3DCAV\",\"remember-text\":\"login_remember-text__2YdFX\",\"remember-block\":\"login_remember-block__1M0ET\",\"login-button\":\"login_login-button__eexvH\",\"_disable\":\"login__disable__3w4KH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected-page\":\"pagination_selected-page__1SDfa\",\"page-number\":\"pagination_page-number__DpB1o\",\"next-botton\":\"pagination_next-botton__AnZ3M\",\"previous-botton\":\"pagination_previous-botton__16bwp\",\"image\":\"pagination_image__1tacT\",\"bottom-space\":\"pagination_bottom-space__2JhVV\"};","import React from \"react\";\r\nimport styles from \"./forms-control.module.scss\";\r\nimport getClassName from \"../../../Services/Service\";\r\n\r\nconst FormControl = ({ error, helperText, formControlClassName, children }) => {\r\n  return (\r\n    <div className={getClassName(styles[\"form-control\"], formControlClassName)}>\r\n      <div className={error && styles.error}>{children}</div>\r\n      {error && <span className={styles[\"error-text\"]}>{helperText}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea\r\n        type={props.type}\r\n        {...props.name}\r\n        placeholder={props.placeholder}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { type, name, placeholder, className } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input\r\n        type={type}\r\n        {...name}\r\n        placeholder={placeholder}\r\n        className={className}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"forms-control_form-control__uBF8n\",\"error\":\"forms-control_error__b3iDN\",\"error-text\":\"forms-control_error-text__Nt_fm\",\"form-common-error\":\"forms-control_form-common-error__3a4oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2XAmd\",\"wrapper\":\"header_wrapper__nTiAZ\",\"header__title\":\"header_header__title__4nvRq\",\"header__login-button\":\"header_header__login-button__3I4a4\",\"header__logout-button\":\"header_header__logout-button__1ziO2\"};","export default __webpack_public_path__ + \"static/media/oval.ac6d1de9.svg\";","import React from \"react\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport getClassName from \"../../../Services/Service\";\r\nimport oval from \"../../../Assets/Images/oval.svg\";\r\n/*\r\n *\r\n *  props:\r\n *  inBlock - Сделает прелоадер спозиционированным по центру внутри любого блока\r\n *            с CSS свойстом position:relative;\r\n *\r\n * */\r\nconst Preloader: React.FunctionComponent<{\r\n  inBlock?: boolean | \"absolute\",\r\n  transparent?: boolean,\r\n  disableSpinner?: boolean,\r\n  inButton?: boolean,\r\n  spinnerIconClassName?: string,\r\n  style?: React.CSSProperties,\r\n}> = (props) => (\r\n  <div\r\n    className={getClassName(\r\n      props.inBlock ? \"in-block-preloader\" : \"full-screen-preloader\",\r\n      props.inBlock === \"absolute\" && \"absolute-preloader\",\r\n      props.transparent && \"transparent-preloader\"\r\n    )}\r\n    style={props.style}\r\n  >\r\n    {!props.disableSpinner && (\r\n      <div\r\n        className={getClassName(\r\n          \"lds-spinner\",\r\n          props.inButton && \"_lds-small-spinner\"\r\n        )}\r\n      >\r\n        <ReactSVG\r\n          src={oval}\r\n          className={getClassName(\r\n            \"lds-inner-spinner\",\r\n            props.spinnerIconClassName\r\n          )}\r\n        />\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users-container\":\"users_users-container__30RKw\",\"userPhoto\":\"users_userPhoto__eUAgy\",\"search-user\":\"users_search-user__2LIpL\",\"search-button\":\"users_search-button__1kMif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"layout_main__26Go0\",\"content\":\"layout_content__2Pujz\"};","export default __webpack_public_path__ + \"static/media/user.f4ae82d7.png\";"],"sourceRoot":""}