{"version":3,"sources":["hoc/withAuthRedirect.js","Pages/ChatPage/chat-page.module.scss","Pages/ChatPage/ChatPage.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","props","to","module","exports","Chat","useState","ws","setWs","readyStatus","setReadyStatus","useEffect","addEventListener","removeEventListener","webChannel","closeHandler","setTimeout","createChannel","close","WebSocket","inBlock","transparent","Messages","AddMessageForm","messages","setMessages","messagesAnchorRef","useRef","current","scrollIntoView","e","prev","JSON","parse","data","className","styles","map","x","Message","message","userId","ref","alt","src","photo","userName","setMessage","value","onChange","target","type","placeholder","disabled","onClick","send"],"mappings":"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","file":"static/js/4.6cfcfcb8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  let RedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-container\":\"chat-page_user-container__27t38\",\"user\":\"chat-page_user__3iJg0\",\"user__avatar\":\"chat-page_user__avatar__2WQaf\",\"user__message-block\":\"chat-page_user__message-block__Vri2l\",\"user__author\":\"chat-page_user__author__1j-uT\"};","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Preloader from \"../../Components/Common/Preloader/Preloader\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport styles from \"./chat-page.module.scss\";\r\n\r\ninterface ChatMessage {\r\n  userId: number;\r\n  message: string;\r\n  userName: string;\r\n  photo: string;\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n  return <Chat />;\r\n};\r\n\r\nconst Chat: React.FC = () => {\r\n  const [ws, setWs] = useState<WebSocket | null>(null);\r\n\r\n  const [readyStatus, setReadyStatus] = useState<\"pending\" | \"ready\">(\r\n    \"pending\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    ws?.addEventListener(\"open\", () => {\r\n      setReadyStatus(\"ready\");\r\n    });\r\n    return () => {\r\n      ws?.removeEventListener(\"open\", () => {\r\n        setReadyStatus(\"ready\");\r\n      });\r\n    };\r\n  }, [readyStatus, ws]);\r\n\r\n  useEffect(() => {\r\n    let webChannel: WebSocket;\r\n    const closeHandler = () => {\r\n      setTimeout(() => {\r\n        createChannel();\r\n      }, 5000);\r\n    };\r\n\r\n    function createChannel() {\r\n      webChannel?.removeEventListener(\"close\", closeHandler);\r\n      webChannel?.close();\r\n\r\n      webChannel = new WebSocket(\r\n        \"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\"\r\n      );\r\n      webChannel.addEventListener(\"close\", closeHandler);\r\n      setWs(webChannel);\r\n    }\r\n    createChannel();\r\n    return () => {\r\n      webChannel.removeEventListener(\"close\", closeHandler);\r\n      webChannel.close();\r\n    };\r\n  }, []);\r\n\r\n  if (readyStatus === \"pending\") {\r\n    return <Preloader inBlock transparent />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Messages ws={ws} />\r\n      <AddMessageForm ws={ws} readyStatus={readyStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC<{ ws: WebSocket | null }> = ({ ws }) => {\r\n  const [messages, setMessages] = useState<Array<ChatMessage>>([]);\r\n  const messagesAnchorRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    messagesAnchorRef.current?.scrollIntoView(false);\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    ws?.addEventListener(\"message\", (e) => {\r\n      setMessages((prev) => [...prev, ...JSON.parse(e.data)]);\r\n    });\r\n    return () => {\r\n      ws?.removeEventListener(\"message\", (e) => {\r\n        setMessages((prev) => [...prev, ...JSON.parse(e.data)]);\r\n      });\r\n    };\r\n  }, [ws]);\r\n\r\n  return (\r\n    <div className={styles[\"user-container\"]}>\r\n      {messages.map((x) => (\r\n        <>\r\n          <Message key={x.userId} message={x} />\r\n          <div ref={messagesAnchorRef}></div>\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface IChatMessageProps {\r\n  message: ChatMessage;\r\n}\r\n\r\nconst Message: React.FC<IChatMessageProps> = (props) => {\r\n  const { message } = props;\r\n  return (\r\n    <div className={styles[\"user\"]}>\r\n      <img alt=\"\" src={message.photo} className={styles[\"user__avatar\"]} />\r\n      <div className={styles[\"user__message-block\"]}>\r\n        <div className={styles[\"user__author\"]}>{message.userName}</div>\r\n        <div className={styles[\"user__message\"]}>{message.message}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm: React.FC<{\r\n  ws: WebSocket | null;\r\n  readyStatus: \"pending\" | \"ready\";\r\n}> = ({ ws, readyStatus }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const sendMessageHandler = () => {\r\n    if (!message) {\r\n      return;\r\n    }\r\n    ws?.send(message);\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Enter text message\"\r\n      />\r\n      <button\r\n        disabled={ws === null || readyStatus !== \"ready\"}\r\n        onClick={sendMessageHandler}\r\n      >\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuthRedirect(ChatPage);\r\n"],"sourceRoot":""}